

Udemy
Design Patterns in Go
s01_Introduction.txt



Design Patterns are typically OOP-based

Go is not OOP
    no inheritance
    weak encapsulation

permissive visibiliy/naming

use of OOP-ish terminology
    hierarchy implies a set of related types: shared interfaces, embedding

lectures are presented using Goland/Kinetica
    Goland
    Kinetica
each lecture has a corresponding .go file attached

there are no coding exercises




=======
Creational Patterns
   object creation mechanisms
      Factory Pattern
      Singleton Pattern
      ...

Structural Patterns
   assemble objects and classes into larger structures
      Adapter
      Composite
      Decorator

Behavioral Patterns
   communication between objects
      Observer
      Strategy
      Command


